service: jacks-club-service

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:891377034411:table/*"

functions:
  createUser:
    handler: src/controllers/user.createUserHandler
    events:
      - http:
          path: user
          method: post
          cors: true

  getUsers:
    handler: src/controllers/user.getUsersHandler
    events:
      - http:
          path: user
          method: get
          cors: true

  getUser:
    handler: src/controllers/user.getUserHandler
    events:
      - http:
          path: user/{userUuid}
          method: get
          cors: true

  updateUser:
    handler: src/controllers/user.updateUserHandler
    events:
      - http:
          path: user/{userUuid}
          method: put
          cors: true

  deleteUser:
    handler: src/controllers/user.deleteUserHandler
    events:
      - http:
          path: user/{userUuid}
          method: delete
          cors: true

  getBalance:
    handler: src/controllers/balance.getBalanceHandler
    events:
      - http:
          path: balance/{userUuid}
          method: get
          cors: true

  updateBalance:
    handler: src/controllers/balance.updateBalanceHandler
    events:
      - http:
          path: balance/{userUuid}
          method: put
          cors: true

  processTransaction:
    handler: src/controllers/transaction.processTransactionHandler
    events:
      - http:
          path: transaction
          method: post
          cors: true

  getTransaction:
    handler: src/controllers/transaction.getTransactionHandler
    events:
      - http:
          path: transaction/{transactionUuid}
          method: get
          cors: true

  getAllTransactions:
    handler: src/controllers/transaction.getAllTransactionsHandler
    events:
      - http:
          path: transaction
          method: get
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: userUuid
            AttributeType: S
        KeySchema:
          - AttributeName: userUuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    BalancesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Balances
        AttributeDefinitions:
          - AttributeName: userUuid
            AttributeType: S
        KeySchema:
          - AttributeName: userUuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    TransactionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Transactions
        AttributeDefinitions:
          - AttributeName: transactionUuid
            AttributeType: S
        KeySchema:
          - AttributeName: transactionUuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    LocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Locks
        AttributeDefinitions:
          - AttributeName: lockKey
            AttributeType: S
        KeySchema:
          - AttributeName: lockKey
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
          
plugins:
  - serverless-offline
  - serverless-plugin-typescript
